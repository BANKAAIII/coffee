
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  phoneNumber: 'phoneNumber',
  role: 'role',
  createdAt: 'createdAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.MenuItemsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  isAvailable: 'isAvailable',
  price: 'price',
  imageUrl: 'imageUrl',
  discountPercent: 'discountPercent',
  isSpecial: 'isSpecial',
  specialValidity: 'specialValidity',
  isActive: 'isActive',
  categoryId: 'categoryId'
};

exports.Prisma.OrderItemsScalarFieldEnum = {
  id: 'id',
  quantity: 'quantity',
  price: 'price',
  discount: 'discount',
  menuItemId: 'menuItemId',
  orderId: 'orderId'
};

exports.Prisma.OrdersScalarFieldEnum = {
  id: 'id',
  status: 'status',
  amount: 'amount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  paymentMethod: 'paymentMethod'
};

exports.Prisma.CartsScalarFieldEnum = {
  id: 'id',
  quantity: 'quantity',
  timeStamp: 'timeStamp',
  temp: 'temp',
  expiry: 'expiry',
  orderId: 'orderId'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  method: 'method',
  status: 'status',
  timeStamp: 'timeStamp',
  orderId: 'orderId',
  transactionId: 'transactionId'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  rating: 'rating',
  comment: 'comment',
  createdAt: 'createdAt',
  userId: 'userId',
  menuItemId: 'menuItemId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  CUSTOMER: 'CUSTOMER',
  OWNER: 'OWNER',
  STAFF: 'STAFF'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  PENDING: 'PENDING',
  PREPARING: 'PREPARING',
  COMPLETED: 'COMPLETED',
  READY: 'READY',
  STARTED: 'STARTED',
  CANCELLED: 'CANCELLED',
  FAILED: 'FAILED'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  CASH: 'CASH',
  CARD: 'CARD',
  UPI: 'UPI',
  WALLET: 'WALLET'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Category: 'Category',
  MenuItems: 'MenuItems',
  OrderItems: 'OrderItems',
  Orders: 'Orders',
  Carts: 'Carts',
  Payment: 'Payment',
  Review: 'Review'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/ameya/Desktop/frontendPractice/coffee-website/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/ameya/Desktop/frontendPractice/coffee-website/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  CUSTOMER\n  OWNER\n  STAFF\n}\n\nmodel User {\n  id          String   @id @default(cuid())\n  name        String?\n  email       String   @unique\n  password    String\n  phoneNumber Int      @unique\n  role        Role     @default(CUSTOMER)\n  createdAt   DateTime @default(now())\n\n  //Orders placed\n  orders Orders[]\n\n  //reviews written\n  reviews Review[]\n\n  //indexing the frequent queries\n  @@index([email, phoneNumber, role])\n}\n\n// Menu Related schema\nmodel Category {\n  id          String      @id @default(cuid())\n  name        String      @unique\n  description String?\n  //items in category\n  menuItems   MenuItems[]\n}\n\nmodel MenuItems {\n  id          String  @id @default(cuid())\n  name        String\n  description String\n  isAvailable Boolean @default(false)\n  price       Float\n  imageUrl    String\n\n  //Discount price\n  discountPercent Float?\n\n  //isSpecial (creatings specials for occasions)\n  isSpecial       Boolean   @default(false)\n  specialValidity DateTime?\n\n  //EasyMenuChange\n  isActive Boolean @default(true)\n\n  // Relation to the parent Category\n  categoryId String\n  category   Category @relation(fields: [categoryId], references: [id], onDelete: Restrict) //Also add OnUpdate\n\n  //OrderItems\n  orderItems OrderItems[]\n\n  //Reviews\n  reviews Review[]\n\n  @@index([categoryId, isActive, isSpecial, discountPercent])\n}\n\nenum OrderStatus {\n  PENDING\n  PREPARING\n  COMPLETED\n  READY\n  STARTED\n  CANCELLED\n  FAILED\n}\n\nenum PaymentMethod {\n  CASH\n  CARD\n  UPI\n  WALLET\n}\n\nmodel OrderItems {\n  id       String @id @default(cuid())\n  quantity Int\n  price    Float\n\n  //Discount applied\n  discount Float? @default(0) // get at the time of orderplacemet.\n\n  //Relation to menu Item\n  menuItemId String\n  menuItem   MenuItems @relation(fields: [menuItemId], references: [id], onDelete: Restrict)\n\n  //Relation to Orders\n  orderId String\n  orders  Orders @relation(fields: [orderId], references: [id], onDelete: Cascade) //add On Update field\n}\n\n//Orders \nmodel Orders {\n  id        String      @id @default(cuid())\n  status    OrderStatus @default(PENDING)\n  amount    Float\n  createdAt DateTime    @default(now())\n  updatedAt DateTime    @updatedAt\n\n  //Placed By\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  //Order Items\n  orderItems OrderItems[]\n\n  //Mode of Payment\n  paymentMethod PaymentMethod\n\n  //PaymentStatus\n  payment Payment[]\n\n  //relation to cart\n  cart Carts?\n\n  @@index([userId, status, createdAt])\n}\n\nmodel Carts {\n  id        String    @id @default(cuid())\n  quantity  Int       @default(1)\n  timeStamp DateTime  @default(now())\n  temp      Boolean   @default(true)\n  expiry    DateTime? // set expiry time for temp carts\n\n  // Relation to Orders\n  orderId String? @unique\n  order   Orders? @relation(fields: [orderId], references: [id], onDelete: Cascade)\n\n  @@index([orderId, timeStamp])\n}\n\nenum PaymentStatus {\n  PENDING\n  COMPLETED\n  FAILED\n  REFUNDED\n}\n\nmodel Payment {\n  id        String        @id @default(cuid())\n  amount    Float\n  method    PaymentMethod\n  status    PaymentStatus @default(PENDING)\n  timeStamp DateTime      @default(now())\n\n  // relation to order \n  orderId String\n  order   Orders @relation(fields: [orderId], references: [id], onDelete: Restrict)\n\n  transactionId String? @unique\n}\n\nmodel Review {\n  id        String   @id @default(cuid())\n  rating    Int\n  comment   String?\n  createdAt DateTime @default(now())\n\n  //Relation to User\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Restrict)\n\n  //Relation to MenuItem\n  menuItemId String\n  menuItem   MenuItems @relation(fields: [menuItemId], references: [id], onDelete: Restrict)\n}\n",
  "inlineSchemaHash": "a97a53566426d17d8e832348c83176cc815825c4443d83d1a6c0d96cd4b0b22f",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Orders\",\"relationName\":\"OrdersToUser\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToUser\"}],\"dbName\":null},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"menuItems\",\"kind\":\"object\",\"type\":\"MenuItems\",\"relationName\":\"CategoryToMenuItems\"}],\"dbName\":null},\"MenuItems\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAvailable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountPercent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isSpecial\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"specialValidity\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToMenuItems\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItems\",\"relationName\":\"MenuItemsToOrderItems\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"MenuItemsToReview\"}],\"dbName\":null},\"OrderItems\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"discount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"menuItemId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"menuItem\",\"kind\":\"object\",\"type\":\"MenuItems\",\"relationName\":\"MenuItemsToOrderItems\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Orders\",\"relationName\":\"OrderItemsToOrders\"}],\"dbName\":null},\"Orders\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrdersToUser\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItems\",\"relationName\":\"OrderItemsToOrders\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"OrdersToPayment\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"Carts\",\"relationName\":\"CartsToOrders\"}],\"dbName\":null},\"Carts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timeStamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"temp\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"expiry\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Orders\",\"relationName\":\"CartsToOrders\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"method\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"timeStamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Orders\",\"relationName\":\"OrdersToPayment\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewToUser\"},{\"name\":\"menuItemId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"menuItem\",\"kind\":\"object\",\"type\":\"MenuItems\",\"relationName\":\"MenuItemsToReview\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

